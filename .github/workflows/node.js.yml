name: Eleventy CI

on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Purge cloudflare cache
  purge:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Purge cache
      uses: jakejarvis/cloudflare-purge-action@master
      env:
        # Zone is required by both authentication methods
        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

  reddit:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: checkcommit
        id: checkcommit
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ chapter: ]]
          then
            echo "match=true" >> $GITHUB_OUTPUT
            echo "msg=$(echo "${{ github.event.head_commit.message }}" | sed -nr 's/.*chapter:\s+?(.*)(\n|$)/\1/p')" >> $GITHUB_OUTPUT
          fi

      - if: steps.checkcommit.outputs.match == 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: steps.checkcommit.outputs.match == 'true'
        id: geturl
        run: echo "url=$(scripts/get_url)" >> $GITHUB_OUTPUT

      - if: steps.checkcommit.outputs.match == 'true'
        uses: bluwy/release-for-reddit-action@v1
        with:
          username: ${{ secrets.REDDIT_USERNAME }}
          password: ${{ secrets.REDDIT_PASSWORD }}
          app-id: ${{ secrets.REDDIT_APP_ID }}
          app-secret: ${{ secrets.REDDIT_APP_SECRET }}
          title: "${{ steps.checkcommit.outputs.msg }}"
          url: "${{ steps.geturl.outputs.url }}"
          subreddit: dadalha
  
  twitter:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: checkcommit
        id: checkcommit
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ twitter: ]]
          then
            echo "match=true" >> $GITHUB_OUTPUT
            echo "msg=$(echo "${{ github.event.head_commit.message }}" | sed -nr 's/.*twitter:\s+?(.*):twitter/\1/p')" >> $GITHUB_OUTPUT
          fi

      - if: steps.checkcommit.outputs.match == 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: steps.checkcommit.outputs.match == 'true'
        id: geturl
        run: echo "url=$(scripts/get_url)" >> $GITHUB_OUTPUT

      - if: steps.checkcommit.outputs.match == 'true'
        uses: bluwy/release-for-reddit-action@v1
        with:
          username: ${{ secrets.REDDIT_USERNAME }}
          password: ${{ secrets.REDDIT_PASSWORD }}
          app-id: ${{ secrets.REDDIT_APP_ID }}
          app-secret: ${{ secrets.REDDIT_APP_SECRET }}
          title: "${{ steps.checkcommit.outputs.msg }}"
          url: "${{ steps.geturl.outputs.url }}"
          subreddit: dadalha
